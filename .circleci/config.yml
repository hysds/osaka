version: 2.1
jobs:
  test:
    docker:
      - image: hysds/pge-base:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Test
          command: |
            source $HOME/.bash_profile
            pip install -e .
            pytest .
  build:
    docker:
      - image: cimg/python:3.9
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install pytest==7.2.0
            pip install .
      - run:
          name: pytest
          command: |
            pytest .
  publish-pypi:
    docker:
      - image: cimg/python:3.9
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - run:
          name: Init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "repository: https://upload.pypi.org/legacy/" >> ~/.pypirc
            echo -e "username: $PYPI_USER" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: Install tools
          command: |
            pip install twine==4.0.2
      - run:
          name: Install and publish to PyPI
          command: |
            pip install .
            python setup.py sdist bdist_wheel
            twine upload dist/* --verbose --config-file ~/.pypirc

workflows:
  version: 2
  test:
    jobs:
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
  weekly:
    triggers:
      - schedule:
          cron: "0 7 * * 0"
          filters:
            branches:
              only:
                - develop
    jobs:
      - test:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            branches:
              only: develop
  build-and-deploy:
    jobs:
      - build:
          context:
            - docker-hub-creds
            - git-oauth-token
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - publish-pypi:
          context:
            - docker-hub-creds
            - git-oauth-token
            - pypi-creds
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
